# Name of the microservice, this will be used to register the service in Eureka (if applicable).
spring.application.name=order-service

# The context path for the service. All API endpoints will be prefixed with /orders.
server.servlet.context-path=/orders

# The port number on which this service will run.
server.port=9020

# --- Database Configuration ---
# URL to connect to the PostgreSQL database for the order service.
spring.datasource.url=jdbc:postgresql://localhost:5432/orderDB

# Username for connecting to the PostgreSQL database.
# Replace with the actual database username.
spring.datasource.username=postgres

# Password for connecting to the PostgreSQL database.
# Replace with the actual database password.
spring.datasource.password=root

# Hibernate setting to control how the database schema is handled.
# 'create-drop' will create the schema on startup and drop it on shutdown.
# For production, consider changing this to 'update' or 'validate'.
spring.jpa.hibernate.ddl-auto=create-drop

# --- JPA & Hibernate Configuration ---
# Enables printing of the SQL queries generated by Hibernate in the console for debugging purposes.
spring.jpa.show-sql=true

# Formats the SQL queries output to be more readable.
spring.jpa.properties.hibernate.format_sql=true
